WinConditionsScript


        "Last time, we concluded that once all of the major threats are developed in a game of connect 4, the result can be computed deterministically as a function of the positions of those threats."
        "We learned that the parity of the row also has a strong influence on the result, but we didn't learn precisely how to go from a list of threats to a winning player. That's our task today."
        "Let's take this example which we left off on last time. Since everything other than the positions of the threats is superfluous, we will simply hide the columns which have no more threats."
        "Now, we have a set of unadjoined columns. No need to worry about connecting 4 anymore. The players are just scrambling to get to a threat."
        "This model is a faithful representation of the game from which we took it, since as soon as a player claims a threat, that means they won the underlying game of connect 4."
        "So, we have reduced the endgame of connect 4 to this much simpler game of 'just-get-a-threat!'"
        "Let's reiterate how the parity mechanics from last time work. Here's an example of a single threat for Red on an odd row, Red on an even row, Yellow on an odd row, and Yellow on an even row."
        "This way of thinking works just fine when there is a single column with some number of threats, but it doesn't extend to multiple columns."
        "From this view, it is strikingly obvious why our parity rules from last time work. But as promised, it's time to generalize. There can be multiple rows which contain threats, and each row can contain multiple threats."
        "Now, the player who is in Zugzwang is Red if the amount of dead space is even. It is Yellow in the case that it is odd. This player who is in the Zugzwang will be the first to have to make a move which structurally changes the position of the board."
        ""



        "Let's start off with no more than one threat per column. In the most trivial case, we just don't have any threats whatsoever, in which case the game is obviously a tie. No one can get a threat since there is no threat to be gotten."
        "Now let's look at what happens in a column with an odd threat for red. In this case, Red wins in the same way as we learned last time- Red likes odd parity."
        "What if we add another column with an odd threat? Let's play it out. Red discards one of the two threats. Then the second becomes available for Red to take."
        "Let's add a third column. Now red wins, with 2 threats left on the board."
        "In the case of 4 columns, Red has to expend one threat, then takes the next, leaving 2 threats on the board."
        "Just to drive the point home, here's the case of 5 columns. Red wins, leaving 4 threats."
        "And 6 columns. Red expends one, wins on the next, again leaving 4 threats open."
        "The fact that Red is, in alternating cases, forced to expend a threat in order to get Parity back on his side, is the essence of the Zugzwang."
        "By adding a new odd-row threatened column, we alternate whose turn it is. So, if Red is the player forced to make a move with 4 odd threats, then we know that with 5 of them, it will be Yellow in the hot seat."
        "However, by neutralizing an odd-threatened column, we alternate whose turn it is too. This is the reason for which completing a column which was odd-row threatened toggles who is in the Zugzwang."
        "So, with one odd-row threat, Yellow is in the Zugzwang. With two, Red is in the Zugzwang. With 3, Yellow is in the Zugzwang, and so on."
        "In order to get out of the Zugzwang, a player must then expose a threat which reveals an odd number of moves, thereby toggling the Zugzwang."
        "Then, we have that the player who loses is the player who is in the Zugzwang and has no exposable threats."
        "Ok, that was a lot of jargon. Let's see some examples."